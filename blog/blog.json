[{"id":"5df3fb866458685aeb1dc614","uuid":"bc0d9cfd-c900-4491-8915-04c838278842","title":"Introducing Pippin — High Performance, Production-ready External Wallet for Nano and Banano","slug":"introducing-pippin-high-performance-external-wallet-for-nano-and-banano","html":"<figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/preview-green-black.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/12/preview-green-black.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/preview-green-black.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/preview-green-black.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/preview-green-black.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/preview-green-black.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/preview-green-black.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/preview-green-black.png 2000w\" class=\"kg-image lazyload\" alt=\"Pippin is a High Performance, Production-Ready Developer Wallet for Nano and BANANO\"></div><figcaption>Pippin is a High Performance, Production-Ready Developer Wallet for Nano and BANANO</figcaption></figure><p>Imagine that you wanted to integrate <a href=\"https://nano.org/\" rel=\"noopener nofollow\"><strong><strong>Nano</strong></strong></a> — the fee-less, instant, and environmentally friendly cryptocurrency, or <a href=\"https://banano.cc/\" rel=\"noopener nofollow\"><strong><strong>BANANO</strong></strong></a> — the fee-less, instant, rich in potassium cryptocurrency into your application. Whether it’s an exchange, casino, faucet, game, store, or vending machine— one of the first things you’ll need to do is figure out how to interface with a <a href=\"https://en.wikipedia.org/wiki/Cryptocurrency_wallet\" rel=\"noopener nofollow\"><strong><strong><em><em>wallet</em></em></strong></strong></a>.</p><p>Intimidating right? Luckily if you peruse the <a href=\"https://docs.nano.org/commands/rpc-protocol/#wallet-rpcs\" rel=\"noopener nofollow\"><strong><strong>Nano Documentation</strong></strong></a><strong><strong> </strong></strong>you’ll quickly find out that Nano has a developer wallet built-in, right into the node! It has a full set of APIs that lets you create accounts, send Nano, receive Nano, etc.</p><p>But then when you read a little more about it and see that the developer wallet isn’t recommended for production integrations, it’s tightly coupled to a node, and what if you have disk space or bandwidth constraints? Running a full node probably isn’t something that you want to do. The answer to these problems is <strong><strong><em><em>external key management</em></em></strong></strong><em><em> .</em></em> But what does that mean? Well, it basically means writing your own wallet, manually crafting and signing blocks, and using any node(s) to publish the block. All while taking proper precautions along the way to make sure blocks are confirmed and avoiding duplicate transactions. Today we’re announcing a new developer wallet that gives you external key management and incredibly high performance right out if the box…</p><h2 id=\"what-is-pippin-anyway\">What is “Pippin” Anyway?</h2><p>To put it simply, Pippin is a Nano (and BANANO) wallet for developers. Pippin is the first wallet of its kind that is <strong><strong>100% compatible with the developer wallet (aka “node wallet”) APIs</strong></strong>. Of course the node wallet isn’t recommended for a lot of use cases, but a lot of developers use it anyway — because as you might expect, it’s the easiest solution and it generally works well enough. One of the goals of Pippin is to provide a production-ready, external key management solution that’s incredibly easy to setup and maintain.</p><p>Pippin has numerous advantages:</p><ul><li>It’s a drop-in replacement for the node/developer wallet</li><li>It has native support for <a href=\"https://dpow.nanocenter.org/\" rel=\"noopener nofollow\"><strong><strong>DPoW</strong></strong></a> and <a href=\"https://bpow.banano.cc/\" rel=\"noopener nofollow\"><strong><strong>BPoW</strong></strong></a></li><li>It’s completely detached from the node — meaning, you can use Pippin with any public node (no need to run your own node, you could also run a node in 1 location and have pippin on any number of machines using the same node)</li><li>It’s compatible with multiple database backends (SQLite, MySQL, PostgreSQL)</li><li>It can lazily auto-receive transactions (for example if you don’t want to compute PoW every time your account receives some coins but you also don’t want to explicitly receive them, Pippin can just receive blocks on demand when you need to perform a send — this also works well for when your wallet is locked and cannot auto-receive)</li><li>It supports encrypting seeds and private keys</li><li>Is fully asynchronous and easily scalable thanks to per-account, thread-safe distributed locks.</li></ul><h2 id=\"it-s-also-very-very-fast\">It’s Also Very, Very Fast</h2><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/speed-comparison-green-1.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/12/speed-comparison-green-1.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/speed-comparison-green-1.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/speed-comparison-green-1.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/speed-comparison-green-1.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/speed-comparison-green-1.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/speed-comparison-green-1.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/speed-comparison-green-1.png 2000w\" class=\"kg-image lazyload\" alt=\"Pippin v1.0.2 vs Node Wallet V20\"></div><figcaption>Pippin v1.0.2 vs Node Wallet V20</figcaption></figure><p>A benchmark was constructed that:</p><ol><li>Created a new wallet with 21 accounts, and opened one of the accounts with some coins. (1 block)</li><li>Create 20 transactions to 20 different accounts from the first account. (20 blocks)</li><li>Receive all 20 transactions across the 20 different accounts (20 blocks)</li><li>Send all of the coins back to the original account in 20 more transactions (20 blocks)</li><li>Return coins to sender (1 block)</li></ol><p>The same node was used for both Pippin and the node wallet, the same PoW provider was used, and the exact same amount of transactions were made in the exact same way.</p><p>This was repeated 3 times for each wallet, under the same conditions. Pippin was consistently at least <strong><strong>twice as fast</strong></strong> as the node wallet.</p><p>The same node was used for every run with both Pippin and the node wallet, the same PoW provider was used, and the exact same amount of transactions were made in the exact same way.</p><h2 id=\"the-technology-behind-pippin\">The Technology Behind Pippin</h2><p>Pippin is written in Python, it is able to perform incredibly fast by using libraries such as <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"noopener nofollow\"><strong><strong>asyncio</strong></strong></a>, <a href=\"https://github.com/MagicStack/uvloop\" rel=\"noopener nofollow\"><strong><strong>uvloop</strong></strong></a>, <a href=\"https://magicstack.github.io/asyncpg/current/\" rel=\"noopener nofollow\"><strong><strong>asyncpg</strong></strong></a>/<a href=\"https://github.com/jreese/aiosqlite\" rel=\"noopener nofollow\"><strong><strong>aiosqlite</strong></strong></a>/<a href=\"https://github.com/aio-libs/aiomysql\" rel=\"noopener nofollow\"><strong><strong>aiomysql</strong></strong></a>, <a href=\"https://rapidjson.org/\" rel=\"noopener nofollow\"><strong><strong>rapidjson</strong></strong></a>, and others.</p><p>It uses the brilliant <a href=\"https://github.com/npy0/nanopy\" rel=\"noopener nofollow\"><strong><strong>nanopy</strong></strong></a><strong><strong> </strong></strong>library for signing blocks and generating work, which itself uses C-bindings for ed25519 and blake2b (in the most basic terms, this means that it’s fast).</p><p><strong><strong>…but how is it so fast?</strong></strong> Pippin uses a brilliant per-account distributed locking mechanism that’s backed by <a href=\"https://redis.io/\" rel=\"noopener nofollow\"><strong><strong>Redis</strong></strong></a>. This means that every account can operate completely independent of one another, while still operating in a synchronous fashion on its own chain. So if you push 500 transactions that belong to account #1, then push a transaction that belongs to account #2 — the account #2 transaction will get processed immediately, even though account #1 has 500 pending requests to handle. This mechanism allows for extremely high concurrency and scalability as you increase the number of accounts, it even is safe across multiple processes.</p><p>Additionally, pippin uses a process pool that’s configurable for local work generation, although GPU PoW isn’t natively supported, you can use external work peers, run your own <a href=\"https://github.com/nanocurrency/nano-work-server\" rel=\"noopener nofollow\"><strong><strong>nano-work-server</strong></strong></a> instance, or use a service like <a href=\"http://bpow.banano.cc/\" rel=\"noopener nofollow\"><strong><strong>BoomPoW</strong></strong></a>.</p><h2 id=\"start-using-pippin\">Start Using Pippin</h2><p>Pippin is available on <a href=\"https://pypi.org/project/pippin-wallet/\" rel=\"noopener nofollow\"><strong><strong>PyPi</strong></strong></a> and requires Python 3.6 or newer.</p><p>Simply install it with <a href=\"https://pip.pypa.io/en/stable/\" rel=\"noopener nofollow\"><strong><strong>pip</strong></strong></a></p><pre><code>% pip3 install pippin-wallet</code></pre><p>Then run the server with the command <code><strong><strong>pippin-server</strong></strong></code></p><p>More comprehensive instructions are outlined in the Pippin <a href=\"https://github.com/appditto/pippin_nano_wallet/blob/master/README.md\" rel=\"noopener nofollow\"><strong><strong>README</strong></strong></a><strong><strong>.</strong></strong></p><h2 id=\"thanks-for-reading-\">Thanks for reading!</h2><figure class=\"kg-card kg-image-card\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2020/01/appditto-preview.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview.png 2000w\" class=\"kg-image lazyload\" alt=\"Don't forget to follow Appditto on social media\"></div></figure><p>Appditto Website: <a href=\"http://appditto.com/\" rel=\"noopener nofollow\"><strong><strong>appditto.com</strong></strong></a></p><p>Appditto Twitter: <a href=\"http://twitter.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p><p>Appditto Github: <a href=\"http://github.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p><p>Appditto Instagram: <a href=\"http://instagram.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p>","comment_id":"5df3fb866458685aeb1dc614","feature_image":"https://ghost.appditto.com/content/images/2019/12/preview-green-black-1.png","featured":false,"visibility":"public","created_at":"2019-12-13T20:58:46.000+00:00","updated_at":"2020-01-30T05:26:59.000+00:00","published_at":"2019-12-13T21:09:37.000+00:00","custom_excerpt":"Pippin is a high performance, production-ready Nano (and BANANO) wallet for developers. Pippin is the first wallet of its kind that is 100% compatible with the developer wallet (aka “node wallet”) APIs.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"https://ghost.appditto.com/introducing-pippin-high-performance-external-wallet-for-nano-and-banano/","excerpt":"Pippin is a high performance, production-ready Nano (and BANANO) wallet for developers. Pippin is the first wallet of its kind that is 100% compatible with the developer wallet (aka “node wallet”) APIs.","reading_time":4,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null},{"id":"5ddece2f2cf19825f43f84f9","uuid":"04d4d9f2-9028-461b-a4ef-36b602186d71","title":"Automate Your Flutter Workflow Using GitLab CI/CD and Fastlane","slug":"automate-your-flutter-workflow","html":"<figure class=\"kg-card kg-image-card\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/flutter-automation-2-1.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/12/flutter-automation-2-1.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/flutter-automation-2-1.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/flutter-automation-2-1.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/flutter-automation-2-1.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/flutter-automation-2-1.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/flutter-automation-2-1.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/12/flutter-automation-2-1.png 2000w\" class=\"kg-image lazyload\" alt=\"Flutter Automation with GitLab &amp; Fastlane\"></div></figure><p><a href=\"https://flutter.io/\" rel=\"noopener nofollow\"><strong><strong>Flutter</strong></strong></a> is a modern mobile app development framework that lets you develop beautiful, highly performant apps in very little time. At Appditto we already have multiple Flutter applications in production — including open source projects like <a href=\"http://natrium.io/\" rel=\"noopener nofollow\"><strong><strong>Natrium</strong></strong></a>, <a href=\"http://kalium.banano.cc/\" rel=\"noopener nofollow\"><strong><strong>Kalium</strong></strong></a>, and <a href=\"http://blaisewallet.com/\" rel=\"noopener nofollow\"><strong><strong>Blaise</strong></strong></a>. The biggest pain point of our development process has been the testing, building, and deploying process for all of our apps.</p><h2 id=\"the-old-way-without-ci-cd-or-fastlane\">The old way…without CI/CD or Fastlane</h2><p>If you’ve ever gotten any mobile application into production you can understand the general process, usually it looks like this:</p><ol><li>Run tests…<em><em>and wait</em></em></li><li>Tag the release</li><li>Build the signed android binary (<code>.aab</code> or <code>.apk</code>) …<em><em>and wait</em></em></li><li>Login to the Google Play Developer Console and create a new release</li><li>Upload it to Google Play…<em><em>and wait</em></em></li><li>Fill in your changelog(s) and other general information and publish your app</li></ol><p>In the case of a cross-platform app, we can’t forget about iOS</p><ol><li>Start any iOS-specific tests…<em><em>and wait</em></em></li><li>Build the ios app (<code>flutter build iOS</code>)…<em><em>and wait</em></em></li><li>Archive the app in xcode…<em><em>and wait</em></em></li><li>Upload the app to the App Store via xcode…<em><em>and wait</em></em></li><li><em><em>And wait</em></em> for the App Store to process your upload</li><li>Log in to App Store Connect and create a new release</li><li>Fill in any changelog(s) and other information and submit it for review</li></ol><h2 id=\"what-s-wrong-with-all-of-that-you-might-ask\">What’s wrong with all of that, you might ask?</h2><p>Just to name a few…</p><ul><li>The entire process for just <strong><strong>1 app</strong></strong> can take more than an hour, just to get it submitted for review.</li><li>If you introduced a change that caused tests to fail, you don’t know about it until you are ready to release an update.</li><li>If you introduced a change that caused the build to fail, you don’t know about it until you try to build it.</li><li>It’s prone to user error. There’s a lot of steps in the process, it can be easy to miss something.</li></ul><h2 id=\"the-solution-continuous-integration-continuous-delivery\">The Solution: Continuous Integration &amp; Continuous Delivery</h2><p>We identified the need for <a href=\"https://en.m.wikipedia.org/wiki/Continuous_integration\" rel=\"noopener nofollow\"><strong><strong>continuous integration</strong></strong></a> and <a href=\"https://en.wikipedia.org/wiki/Continuous_delivery\" rel=\"noopener nofollow\"><strong><strong>continuous delivery</strong></strong></a> (referred to as CI/CD) almost immediately, but there’s a lot of competing solutions out there that we wanted to research and try before choosing the one that best fit our needs.</p><p>For our Flutter applications we needed to:</p><ul><li>Automate tests for dart code, Android code, and iOS code</li><li>Automate building the iOS and Android applications</li><li>Automate deployments to the iOS App Store and the Google Play Store</li></ul><p><a href=\"https://fastlane.tools/\" rel=\"noopener nofollow\"><strong><strong>Fastlane</strong></strong></a> is the first part of our continuous integration solution, it is a powerful tool that allows you to automate iOS and Android builds, as well as automate deployments to both of the app stores. It also has several other benefits such as allowing us to manage store information, changelogs, and more in our repository.</p><p>In this guide, we’ll walk through the steps required to integrate GitLab CI/CD and Fastlane into your project.</p><h2 id=\"before-we-get-started-\">Before we get started…</h2><p>This article makes a few assumptions you should be aware of.</p><ul><li>Everything described is applicable to <strong><strong>Unix environments only</strong></strong> — such as MacOS or Linux. <strong><strong>If you are using Windows</strong></strong>, using the <a href=\"https://docs.microsoft.com/en-us/windows/wsl/install-win10\" rel=\"noopener nofollow\"><strong><strong>WSL</strong></strong></a> is required.</li><li>MacOS is required to build and sign iOS apps. You can skip the iOS sections if you are only planning to build for Android or don’t have access to a Mac.</li><li>You need to have an <a href=\"https://developer.apple.com/\" rel=\"noopener nofollow\"><strong><strong>Apple Developer Account</strong></strong></a> to publish iOS apps to the App Store</li><li>You need to have a <a href=\"https://developer.android.com/distribute\" rel=\"noopener nofollow\"><strong><strong>Google Play Developer Account</strong></strong></a> to publish Android apps to the Play Store.</li><li><strong><strong>App Store Privileges — </strong></strong>It’s very important for CI that we add a second account to App Store Connect without 2FA-enabled. You can give it the “App Manager” permission and a secure password. If you aren’t sure how to add an additional user, <a href=\"https://support.appmachine.com/hc/en-us/articles/203647716-Authorize-an-Additional-User-to-your-iOS-Developer-Account\" rel=\"noopener nofollow\"><strong><strong>here’s a guide</strong></strong></a>. Anywhere you are asked for credentials for the app store, you will need to use this account.</li><li>Git Usage— It’s assumed that you are using Git for source control. It doesn’t matter if your repository is self-hosted, on GitHub, on Bitbucket, on GitLab, etc.</li></ul><p>This guide will assume that you want to automate tests, builds, and deployments to both of the app stores — which means that all of the above is required to completely follow this guide.</p><h2 id=\"getting-started-with-fastlane-and-flutter\">Getting started with Fastlane and Flutter</h2><p>We need to get Fastlane installed and configured for our project. The first step is to install fastlane, it can be installed with <code><a href=\"https://guides.rubygems.org/command-reference/\" rel=\"noopener nofollow\"><strong><strong>gem</strong></strong></a></code>.</p><pre><code class=\"language-shell\"># gem install fastlane</code></pre><p>Next navigate to the root of your Flutter project, where you need to initialize fastlane for both android and iOS.</p><pre><code># cd path_to_my_awesome_flutter_app</code></pre><p>First, you might want to add the following lines to <code>.gitignore</code>.</p><pre><code># You definitely want these\n**/ios/*.ipa\n**/ios/*.app.dSYM.zip\n\n# These are optional\n# For our open source projects we choose to exclude some metadata that contains private information\nandroid/fastlane/report.xml\nios/fastlane/report.xml\nios/fastlane/Preview.html\nios/fastlane/metadata/review_information\nios/fastlane/metadata/trade_representative_contact_information\n</code></pre><p><strong><strong>Fastlane install for Android builds and deployments:</strong></strong></p><p>You need to obtain a json file that contains an access key from the Google Play Console. More details available in the <a href=\"https://docs.fastlane.tools/getting-started/android/setup/\" rel=\"noopener nofollow\"><strong><strong>fastlane docs</strong></strong></a>.</p><p>We recommend that you keep this file outside of your repository and in your home directory <code><strong><strong>/home/&lt;YOUR USER&gt;/keys/android/myaccesskey.json</strong></strong></code> or <code><strong><strong>/Users/&lt;YOUR USER&gt;/keys/android/myaccesskey.json</strong></strong></code> (for MacOS). When prompted by fastlane use the path <code><strong><strong>~/keys/android/myaccesskey.json</strong></strong></code> as the location where you stored your key.</p><pre><code># cd android\n# fastlane init\n# cd ..</code></pre><p>Follow the prompts and make sure all of the information is correct, fastlane will create several files in your project once you are finished.</p><p><strong><strong>Fastlane install for iOS builds and deployments:</strong></strong></p><p>As mentioned in the pre-requisites, you want a dedicated account without 2FA to use for continuous integration. For iOS, the fastlane installation is similar but you’ll need to use the apple ID and password of your developer account without 2FA.</p><pre><code># cd ios\n# fastlane init\n# echo 'gem \"cocoapods\"' &gt;&gt; Gemfile\n# cd ..</code></pre><p>Follow through the prompts and make sure the detected information is correct. Managing metadata is up to you, it means you can manage changelogs, descriptions, icons, and other data from within your project. In our case, we chose yes for those (with the exception of ios review_information and iOS trade representative contact information — simply delete the metadata you don’t want to manage via fastlane, and add it to <code><strong><strong>.gitignore</strong></strong></code>).</p><p>You can check in and push all of the files fastlane has created in your project.</p><h2 id=\"a-word-on-code-signing-android\">A word on code signing…Android</h2><p>This article assumes you have setup code signing for your android app as described in the <a href=\"https://flutter.dev/docs/deployment/android\" rel=\"noopener nofollow\"><strong><strong>flutter documentation</strong></strong></a>. That means a <code>.<strong><strong>jks</strong></strong></code> key store, with a <code><strong><strong>key.properties</strong></strong></code> file excluded from source control that has the password, keyAlias, etc.</p><p>If you haven’t configured code signing yet, then follow the steps <a href=\"https://flutter.dev/docs/deployment/android#signing-the-app\" rel=\"noopener nofollow\"><strong><strong>outlined here</strong></strong></a><strong><strong> </strong></strong>before continuing with this guide.</p><h2 id=\"a-word-on-code-signing-ios\">A word on code signing…iOS</h2><p>For <strong>iOS</strong>, the story is a bit more complicated.</p><p>We’re going to use <a href=\"https://docs.fastlane.tools/actions/match/\" rel=\"noopener\"><strong>Fastlane Match</strong></a>, to manage the certificates required for code signing on iOS. Here’s how to do it.</p><ol><li>Create a <strong>private </strong>git repository named <code><strong>ios-certificates.git</strong></code> or similar</li><li>Run the following</li></ol><pre><code># cd ios\n# fastlane match init\n# fastlane match\n# cd ..</code></pre><p>Follow the prompts to setup match, once completed it will create <code><strong>ios/fastlane/Matchfile</strong></code>, which contains information about the ios-certificates repository.</p><h2 id=\"configuring-fastlane-for-flutter-and-gitlab-android-\">Configuring Fastlane for Flutter and GitLab (Android)</h2><p>We installed fastlane with <code><strong>fastlane init</strong></code>, and it configured itself for an Android project. The problem is, fastlane configured itself for an Android project — not for a Flutter project.</p><p>The main fastlane configuration can be found in <code><strong>android/fastlane/Fastfile</strong></code>, it has some default <a href=\"https://docs.fastlane.tools/advanced/lanes/\" rel=\"noopener\">lanes</a>. You can think of a <strong>lane</strong> as a group of tasks. The Fastfile is written in Ruby, so you can write any ruby code within it.</p><p>We want two new lanes for android, <code><strong>build_android</strong></code> and <code><strong>deploy_android</strong></code>. The first builds and signs our Android app, the second uploads it to the play store.</p><p>We’re going to make some simple shell scripts to build the app and run tests, to keep our Fastfile clean.</p><pre><code># touch android/fastlane/flutter_build.sh\n# touch android/fastlane/flutter_test.sh\n# chmod a+x android/fastlane/flutter_build.sh\n# chmod a+x android/fastlane/flutter_test.sh</code></pre><p>These create two empty scripts and make them executable (You can skip flutter_test.sh all together if you are planning to add GitLab as it will become redundant in our pipeline)</p><p>Contents of <code><strong>flutter_build.sh</strong></code>:</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/f7e32bfd159f55e74f0844b39c7d74ae.js\"></script><!--kg-card-end: html--><p>Contents of <code><strong><strong>flutter_test.sh</strong></strong></code>:</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/2abcb8973405647d6c16471bc2e60e66.js\"></script><!--kg-card-end: html--><p>Now we can create our lanes in <code><strong><strong>android/fastlane/Fastfile</strong></strong></code></p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/e59644e5d840a2d104c119d2c850475a.js\"></script><!--kg-card-end: html--><p>Breaking down the first lane, <code><strong><strong>build_android</strong></strong></code>:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/build_android.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/build_android.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/build_android.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/build_android.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/build_android.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/build_android.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/build_android.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/build_android.png 2000w\" class=\"kg-image lazyload\" alt=\"build_android lane\"></div><figcaption>build_android lane</figcaption></figure><ul><li><code><strong><strong>sh \"./flutter_test.sh\"</strong></strong></code> : Executes our tests, you may choose to remove this especially when using GitLab CI as we’ll do tests earlier in our pipeline.</li><li><code><strong><strong>sh \"./flutter_build.sh\" --clean</strong></strong></code> : This builds our <code><strong><strong>.aab</strong></strong></code> (<a href=\"https://developer.android.com/platform/technology/app-bundle\" rel=\"noopener nofollow\">Android App Bundle</a>), this is the binary we want to use when uploading to the play store.</li><li><code><strong><strong>sh \"./flutter_build.sh\" --apk</strong></strong></code> : This builds our standard fat <code><strong><strong>.apk</strong></strong></code>, it’s also completely optional but we like to have it in our archive as it’s easier to install if you want to downgrade to a specific version, offer a download in alternative places, etc.</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/deploy-to-play-store.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/deploy-to-play-store.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/deploy-to-play-store.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/deploy-to-play-store.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/deploy-to-play-store.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/deploy-to-play-store.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/deploy-to-play-store.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/deploy-to-play-store.png 2000w\" class=\"kg-image lazyload\" alt=\"deploy_android lane\"></div><figcaption>deploy_android lane</figcaption></figure><p>Our second lane, <code><strong><strong>deploy_android</strong></strong></code>, is where things get interesting.</p><p>In this lane we are uploading our build to the play store using the fastlane function <a href=\"https://docs.fastlane.tools/actions/upload_to_play_store/\" rel=\"noopener nofollow\">upload_to_play_store</a>. This single lane allows us to upload to production, beta, alpha, or internal tracks — pretty neat!</p><p>You can use these lanes as demonstrated below:</p><pre><code>Build the release binaries:\n# bundle exec fastlane build_android\nProduction deploy:\n# bundle exec fastlane deploy_android production:true\nBeta deploy:\n# bundle exec fastlane deploy_android beta:true\nAlpha deploy:\n# bundle exec fastlane deploy_android alpha:true\nInternal track deploy:\n# bundle exec fastlane deploy_android internal:true</code></pre><p>And we’re done! Fastlane can now build and deploy our Flutter application. We’ll automate this process later, but first we need to configure our iOS build.</p><h2 id=\"configuring-fastlane-for-flutter-and-gitlab-ios-\">Configuring Fastlane for Flutter and GitLab (iOS):</h2><p><strong><strong>Note: A MacOS machine with the latest XCode installed is needed for this section</strong></strong></p><p>Building for iOS and deploying to the App Store is a bit more problematic, mainly because there’s more steps involved. Luckily we can still simplify the process with Fastlane.</p><p>We want to start with creating the same two scripts we made for Android</p><pre><code># touch ios/fastlane/flutter_build.sh\n# touch ios/fastlane/flutter_test.sh\n# chmod a+x ios/fastlane/flutter_build.sh\n# chmod a+x ios/fastlane/flutter_test.sh</code></pre><p>The contents of <code><strong><strong>flutter_build.sh</strong></strong></code>:</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/ce9ca0571f24d03f1416cb5756ffdc09.js\"></script><!--kg-card-end: html--><p><code><strong><strong>--no-codesign</strong></strong></code> is used in our flutter build step because unlike android, flutter build doesn’t give us a binary that can be uploaded straight to the AppStore. There’ll be an additional build step later which will be where we sign our app.</p><p>And <code><strong><strong>flutter_test.sh</strong></strong></code>:</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/4f68dc196e9cf927a417912fac93b08b.js\"></script><!--kg-card-end: html--><p>Now we need to create our lanes, like how we did on Android.</p><p>Like android, we also want a <code><strong><strong>build_ios</strong></strong></code> that builds and signs our app, as well as a <code><strong><strong>deploy_ios</strong></strong></code> that uploads our app to the app store.</p><p>Here’s the whole file, we’ll walk through what it means later:</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/9f70e98b08938e708f7c3307a4bc706b.js\"></script><!--kg-card-end: html--><p>The Fastfile is <strong><strong>Ruby </strong></strong>syntax, so when we define variables and functions it’s written in Ruby.</p><p>The first group of functions and variables are for creating a temporary keychain which will be used to store our signing and deploy keys.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-keychain.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/temp-keychain.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-keychain.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-keychain.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-keychain.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-keychain.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-keychain.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-keychain.png 2000w\" class=\"kg-image lazyload\" alt=\"Temporary keychain variables\"></div><figcaption>Temporary keychain variables</figcaption></figure><p>First we set a couple of variables with the temporary keychain name and password. These are “default” values because we also have the option to include a more secure password from the environment, which we’ll see later.</p><p>Then we have a few ruby functions which create and delete our temporary keychain.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-key-chain-function.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/temp-key-chain-function.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-key-chain-function.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-key-chain-function.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-key-chain-function.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-key-chain-function.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-key-chain-function.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/temp-key-chain-function.png 2000w\" class=\"kg-image lazyload\" alt=\"Functions for creating &amp; deleting temporary keychains\"></div><figcaption>Functions for creating &amp; deleting temporary keychains</figcaption></figure><ul><li><code><strong><strong>delete_temp_keychain</strong></strong></code> will delete the temporary keychain if it exists</li><li><code><strong><strong>create_temp_keychain</strong></strong></code> will create the temporary keychain with a name and password</li><li><code><strong><strong>ensure_temp_keychain</strong></strong></code> simply deletes any existing keychain of the same name, and creates a new one with the given name and password.</li></ul><h3 id=\"why-use-a-temporary-keychain\">Why use a temporary keychain?</h3><p>It’s not required to create a new keychain every time you build the app with Fastlane — the default Login keychain, or any other keychain on your system is perfectly fine. There’s a couple reasons we prefer this method over using the login keychain.</p><ol><li>You don’t need to expose your login password. If you use your login keychain with Fastlane, it will prompt you for a password to unlock it when you run <code><strong><strong>match</strong></strong></code> — not really a problem on a development machine, but for CI/CD we don’t want to be prompted for a password. So we can either provide our login password in the environment or use a different keychain — which is what we’re doing here.</li><li>You can provide a strong, random password every time when the process is automated via GitLab — which we’ll see later. This ties into increased security.</li></ol><p>Then we have our two lanes, similar to android. One is the build step and one is the upload step.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/two-lane.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/two-lane.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/two-lane.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/two-lane.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/two-lane.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/two-lane.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/two-lane.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/two-lane.png 2000w\" class=\"kg-image lazyload\" alt=\"build_ios lane\"></div><figcaption>build_ios lane</figcaption></figure><p>Breaking down the <code><strong><strong>build_ios</strong></strong></code> lane</p><ul><li>It disables “Automatic code signing” which is what we want for our CI/CD server. The <code><strong><strong>disable_code_signing</strong></strong></code><strong><strong> </strong></strong>method actually changes your <code>.xcodeproj</code>file, if you run this locally you probably don’t want to check the modified file into git. You could backup the original at the beginning of the lane if desired, and restore it later by doing something like <code>cp Runner.xcodeproj Runner.xcodeproj.bak</code>.</li><li>It creates our temporary keychain with a name and password from the environment, otherwise uses the default one.</li><li>It runs fastlane match, to install the certificates and profiles into the temporary keychain</li><li>It runs the flutter tests and build</li><li>It builds the <code><strong><strong>.ipa</strong></strong></code> file and signs it, which is what we need to upload to the App Store</li><li>It deletes our temporary keychain at the end</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/upload-to-app-store.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/upload-to-app-store.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/upload-to-app-store.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/upload-to-app-store.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/upload-to-app-store.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/upload-to-app-store.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/upload-to-app-store.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/upload-to-app-store.png 2000w\" class=\"kg-image lazyload\" alt=\"deploy_ios lane\"></div><figcaption>deploy_ios lane</figcaption></figure><p>And the <code><strong><strong>deploy_ios</strong></strong></code> lane is where things get really cool</p><ul><li>It can upload to test flight</li><li>It can upload to the App Store and <em><em>submit it for review </em></em>automatically! It will upload, make sure everything is valid, wait for processing, then submit it for review all in one step.</li></ul><p>Like android you can do either or with parameters</p><pre><code># cd ios\nTo upload to testflight:\n# bundle exec fastlane deploy_ios testflight:true\nTo submit for review:\n# bundle exec fastlane deploy_ios</code></pre><h3 id=\"one-more-thing\">One more thing</h3><p>For iOS apps, if we want to automatically submit them for review we need to set the answers for our compliance questions. You can add the following to <code><strong><strong>ios/fastlane/Deliverfile</strong></strong></code>, but change the answers as they apply to your app.</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/50f92ecad5d2f82f4ff9fadffda11cac.js\"></script><!--kg-card-end: html--><p>And we’re done with Fastlane!</p><p>You can now build and deploy your iOS and Android apps in a couple simple steps.</p><h2 id=\"automating-all-of-it-with-gitlab-ci-cd\">Automating all of it with GitLab CI/CD</h2><p>Now that we can build and deploy our apps with a few simple commands, it’s time to automate it. This is where continuous integration comes in.</p><h3 id=\"why-gitlab\">Why GitLab?</h3><p>There’s plenty of continuous integration/continuous delivery (CI/CD) solutions out there including <a href=\"https://travis-ci.org/\" rel=\"noopener nofollow\">Travis CI</a>, <a href=\"https://github.com/features/actions\" rel=\"noopener nofollow\">GitHub Actions</a>, <a href=\"https://codemagic.io/\" rel=\"noopener nofollow\">Codemagic</a>, <a href=\"https://bitbucket.org/product/features/pipelines\" rel=\"noopener nofollow\">Bitbucket pipelines</a>, <a href=\"https://circleci.com/\" rel=\"noopener nofollow\">Circle CI</a>, <a href=\"https://jenkins.io/\" rel=\"noopener nofollow\">Jenkins</a>, etc. I encourage you to research all of them and determine which one fits your needs the best. For us, we determined that GitLab’s CI/CD would work best for us. That definitely won’t be the case for every team or every project, but here’s the reasons we chose it over the others:</p><ul><li><strong><strong>Ability to use your own </strong></strong><a href=\"https://docs.gitlab.com/runner/\" rel=\"noopener nofollow\"><strong><strong>runner</strong></strong></a>. Think of a runner like a “worker” — it executes your pipelines and in our case will be responsible for running tests, building the apps, and uploading the apps. Many of the services mentioned only allow you to use their shared servers with limited usage caps. Many offer enterprise solutions, paid plans, and various other things to fit your needs — so again, definitely research them and find what works best for you.</li><li><strong><strong>MacOS Requirement.</strong></strong> Flutter applications <strong><strong><em><em>need</em></em></strong></strong> MacOS to build the iOS binary and upload to the App Store. If you don’t intend to server iOS users, then this doesn’t apply to you. Most of the services above provide MacOS servers that you can use (GitLab happens to not provide these), but they’re generally more expensive and more restrictive. Also, we’re dealing with very sensitive data — signing and deploy keys, app store manager passwords, google play upload keys, etc. Unless you’re using an enterprise solution offered by one of the above mentioned CIs, this may not be something your internal audit requirements allow for.</li><li><strong><strong>Intuitive Configuration.</strong></strong> The <a href=\"https://yaml.org/\" rel=\"noopener nofollow\">yaml</a> configuration that GitLab uses is very straightforward, easy to understand, and easy to work with. You can build very complex pipelines in very little time.</li><li><strong><strong>Intuitive Interface.</strong></strong> The experience using GitLab is generally good. It has an interface where you can easily visualize and manage your pipelines, alerts, auto-cancel features, archiving, and a lot more that really fits our needs.</li></ul><p>If your project isn’t already in GitLab, you can create a new one, import one, or mirror it from another repository. We chose to mirror it because our projects are hosted on <a href=\"http://github.com/\" rel=\"noopener nofollow\">GitHub</a>, but your needs may vary. <a href=\"https://docs.gitlab.com/ee/gitlab-basics/create-project.html\" rel=\"noopener nofollow\"><strong><strong>More information can be found on the GitLab website</strong></strong></a> about creating, importing, or mirroring a project.</p><h3 id=\"what-about-the-server\">What about the server?</h3><p>As I said above, GitLab does not provide any shared MacOS runners — which we need to build and deploy our iOS apps. Luckily the gitlab-runner software is incredibly easy to setup, you can run it on any MacOS machine including a MacBook.</p><p>We chose to setup a <a href=\"https://en.wikipedia.org/wiki/Bare-metal_server\" rel=\"noopener nofollow\">bare-metal</a> dedicated MacOS server, this has some downsides — primarily that we need to manage the infrastructure ourselves, keep flutter up to date ourselves, keep XCode and the Android SDK up to date ourselves, etc. However we need MacOS, which is why we chose the bare-metal option instead of using docker containers or a similar lower-maintenance solution. If you want to follow the same approach — a <a href=\"https://en.wikipedia.org/wiki/Mac_Mini\" rel=\"noopener nofollow\"><strong><strong>Mac Mini</strong></strong></a> makes a great option and used, older ones are relatively inexpensive. You can also use a hosting provider such as <a href=\"https://www.macstadium.com/\" rel=\"noopener nofollow\"><strong><strong>MacStadium</strong></strong></a> or <a href=\"http://macincloud.com/\" rel=\"noopener nofollow\"><strong><strong>MacInCloud</strong></strong></a><em><em>. </em></em>Or like I said, if you already have a MacOS development box you can simply setup the gitlab-runner on that.</p><h3 id=\"server-configuration\">Server Configuration</h3><p><strong><strong>Note: If you are intending to use the gitlab-runner on a MacOS development machine that has already been configured for flutter development and FastLane, you can skip these steps. If you are intending to build for android-only, you can skip installing XCode.</strong></strong></p><p>If you’re using a bare-metal MacOS server you need to install the required software to build iOS and Android apps.</p><ol><li><a href=\"http://www.androiddocs.com/sdk/installing/index.html\" rel=\"noopener nofollow\"><strong><strong>Install the Android SDK</strong></strong></a> — Android Studio is the easiest way to install it.</li><li><strong><strong>Install XCode</strong></strong> — via the MacOS App Store</li><li><a href=\"https://flutter.dev/docs/get-started/install/macos\" rel=\"noopener nofollow\"><strong><strong>Install Flutter</strong></strong></a> — Make sure you also add it to your PATH, as described in the document.</li></ol><p>Once these are complete, run <code><strong><strong>flutter doctor -v</strong></strong></code> to ensure everything is configured correctly.</p><p>One other thing we’ll want to do, is install XCode command line tools. This can be done by running the following command:</p><pre><code># xcode-select --install</code></pre><p>We need to add some environment variables, we can add them to <code><strong><strong>~/.zprofile</strong></strong></code> (on MacOS Catalina) or <code><strong><strong>~/.profile</strong></strong></code> (other MacOS versions)</p><pre><code>export LC_ALL=en_US.UTF-8\nexport LANG=en_US.UTF-8\n# Ruby\nexport GEM_HOME=~/.gems\nexport PATH=$PATH:~/.gems/bin</code></pre><p>You can also choose to store sensitive variables here, such as <code><strong><strong>FASTLANE_PASSWORD</strong></strong></code> (the password of the AppStore/Developer account you used to setup fastlane with) and <code><strong><strong>MATCH_PASSWORD</strong></strong></code> (the password required to decrypt your iOS certificates.</p><pre><code>export MATCH_PASSWORD=abc123\nexport FASTLANE_PASSWORD=123abc</code></pre><p>You can also choose to store variables in the GitLab interface per-project, which is what we’ll do for the rest of the guide. Just know that you have the option to do it this way.</p><h3 id=\"getting-access-to-ios-certificates\">Getting access to ios-certificates</h3><p>For fastlane match, you should have created a private git repository with all of your encrypted signing/deploy certificates. We need to give this machine access to these.</p><pre><code># ssh-keygen -t rsa</code></pre><p>Once complete, you can add <code>read-only</code> access to your repository using your public key (by default located in <code>~/.ssh/id_rsa.pub</code>). GitHub calls them <a href=\"https://developer.github.com/v3/guides/managing-deploy-keys/\" rel=\"noopener nofollow\"><strong><strong>Deploy Keys</strong></strong></a>.</p><h3 id=\"installing-keys-for-android-google-play\">Installing keys for Android/Google Play</h3><p>We need to install our <code><strong><strong>jks</strong></strong></code> key store and <code>.<strong><strong>json</strong></strong></code> file that we generated earlier. Upload it to your server and copy it to your home directory. For our example we’ll have them at <code><strong><strong>/Users/&lt;YOUR USER&gt;/keys/android/appditto.jks</strong></strong></code> and <code><strong><strong>/Users/&lt;YOUR USER&gt;/keys/android/myaccesskey.json</strong></strong></code></p><pre><code># mkdir -p /Users/&lt;YOUR USER&gt;/keys/android\n# mv myaccesskey.json ~/keys/android\n# mv appditto.jks ~/keys/android</code></pre><h2 id=\"installing-the-gitlab-runner\">Installing the GitLab Runner</h2><p>We need to install the gitlab-runner software, it’s very easy to do.</p><p>In GitLab, navigate to your project settings -&gt; CI/CD -&gt; Runners and find your registration token. It should look like this</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registeration-token-gitlab.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/registeration-token-gitlab.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registeration-token-gitlab.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registeration-token-gitlab.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registeration-token-gitlab.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registeration-token-gitlab.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registeration-token-gitlab.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registeration-token-gitlab.png 2000w\" class=\"kg-image lazyload\" alt=\"GitLab runner setup\"></div><figcaption>GitLab runner setup</figcaption></figure><p>It just so happens that ours is <code><strong><strong>YourRegistrationToken</strong></strong></code>, we’ll need it when we setup the gitlab-runner.</p><p>To install the runner:</p><pre><code># sudo curl --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-darwin-amd64\n# sudo chmod +x /usr/local/bin/gitlab-runner</code></pre><p>Now that it’s installed, we can register it for our project using <code><strong><strong>gitlab-runner register</strong></strong></code>.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registering-gitlab-runner.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/registering-gitlab-runner.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registering-gitlab-runner.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registering-gitlab-runner.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registering-gitlab-runner.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registering-gitlab-runner.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registering-gitlab-runner.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/registering-gitlab-runner.png 2000w\" class=\"kg-image lazyload\" alt=\"Registering the GitLab runner\"></div><figcaption>Registering the GitLab runner</figcaption></figure><ul><li>Choose <code><strong><strong>https://gitlab.com/</strong></strong></code> when prompted for gitlab-ci coordinator URL</li><li>Enter your token from above, ours is <code><strong><strong>YourRegistrationToken</strong></strong></code></li><li>Choose whatever description you want</li><li>Choose whatever tag you want, but remember what you chose <code><strong><strong>appditto_mac</strong></strong></code> in our case, will be used to target this specific runner when we create our pipeline.</li><li>For runner type, choose <code><strong><strong>shell</strong></strong></code></li></ul><p>Then all we do is install and start the runner, and it should run as a Launchd service that will start itself upon system reboots, etc.</p><pre><code># gitlab-runner install\n# gitlab-runner start</code></pre><p>You can refresh the gitlab settings page and you should see your runner appear.</p><h2 id=\"creating-our-pipeline\">Creating our Pipeline</h2><p>We saw how easy it was to install the gitlab-runner software and configure out server. Now we need to get into the fun stuff — creating our pipeline!</p><p>A <a href=\"https://docs.gitlab.com/ee/ci/pipelines.html\" rel=\"noopener nofollow\"><strong><strong>pipeline</strong></strong></a><strong><strong> </strong></strong>is basically just a set of jobs that may execute in a specific order. For example test -&gt; build -&gt; deploy. The pipeline is triggered on every commit (by default).</p><p>We’re going to design a relatively simple pipeline that can test, build, and deploy our app.</p><p>We’re going to create a file called <code><strong><strong>.gitlab-ci.yml</strong></strong></code> in the root of our project (<code><strong><strong>awesome_appditto_app/.gitlab-ci.yml</strong></strong></code>)</p><p>First part will be the <code><strong><strong>stages</strong></strong></code>, this defines all of the stages in our pipeline.</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/bdcbd6cc207d9eb02670f68228829bb5.js\"></script><!--kg-card-end: html--><ul><li><code><strong><strong>test</strong></strong></code> — will be where we run our tests</li><li><code><strong><strong>update</strong></strong></code> — This is simply going to update our flutter dependencies, we want to run <code>flutter packages upgrade</code> every time because by default GitLab will “cache” the repository instead of cloning it every time (for speed), which means we aren’t guaranteed to have the latest versions of everything unless we do this.</li><li><code><strong><strong>build</strong></strong></code><strong><strong> </strong></strong>—<strong><strong> </strong></strong>This stage will build our android and iOS app.</li><li><code><strong><strong>deploy</strong></strong></code><strong><strong> </strong></strong>— This stage will deploy our android and iOS app.</li></ul><p>Every stage depends on the previous one. So if <code><strong><strong>test</strong></strong></code> fails then none of the other jobs will run, and the entire pipeline will be considered as failed.</p><p>—</p><p>First we can define a job in the <strong><strong>test</strong></strong> stage</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/1ed96e7e41c1b532d30ccf3cb5f65970.js\"></script><!--kg-card-end: html--><p>The job is named <strong><strong>tests</strong></strong>, it only runs when commits are pushed to the <strong><strong>master</strong></strong> branch, it is part of the <strong><strong>test</strong></strong> stage, it only will run on a runner with the <strong><strong>appditto_mac</strong></strong> tag, it executes one command <code><strong><strong>flutter test</strong></strong></code>and it is <strong><strong>interruptible</strong></strong> which means it can be cancelled automatically. If there are two pushes on the master branch, GitLab will cancel redundant pipeline runs automatically for us.</p><p>—</p><p>Then define a job in the <strong><strong>update</strong></strong> stage</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/ec7ea86196b4037d794d699ae6425fff.js\"></script><!--kg-card-end: html--><p>Very similar to the <strong><strong>test </strong></strong>job, except we’re running two commands instead of only 1: <code><strong><strong>flutter packages get</strong></strong></code> and <code><strong><strong>flutter packages upgrade</strong></strong></code>.</p><p>—</p><p>Then we can define our <strong><strong>build</strong></strong> stage. This one consists of two jobs and gets a bit more interesting.</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/14a65f0080d59fb4f5ebc7a2708f32c8.js\"></script><!--kg-card-end: html--><p>We have two jobs <strong><strong>android:build </strong></strong>and <strong><strong>ios:build</strong></strong>.</p><p>They are both just a series of shell commands like the previous jobs, although a bit more complicated. The <strong><strong>android:build</strong></strong> job is creating a <strong><strong>key.properties </strong></strong>and <strong><strong>local.properties</strong></strong> file on the fly, which is used by our android build to determine the SDK location as well as access the key store so it knows what to use for signing our app. We’ll get to defining our environment variables later, if you’re wondering what <code>$ANDROID_KEY_STORE_PASSWORD</code> and the others mean and how to define them.</p><p><strong><strong>ios:build</strong></strong> is creating some environment variables, <strong><strong>TEMP_KEYCHAIN_NAME</strong></strong> and <strong><strong>TEMP_KEYCHAIN_PASSWORD</strong></strong>. Remember how earlier we configured fastlane to create a temporary keychain for signing the app? This is just generating a random name and password for that key store on the fly.</p><p>Another new thing in this job is <code><strong><strong>artifacts</strong></strong></code>. We want to specify our build artifacts so GitLab can archive them for us. This includes our signed <code>.apk</code>, <code>.aab</code>, and <code>.ipa</code> files. After every successful <code><strong><strong>build</strong></strong></code><strong><strong> </strong></strong>stage GitLab will archive the build artifacts so we can come back and download them later, if desired.</p><p>—</p><p>We can then create some jobs for the deploy stage. We’ll create 4 total. One for production on Play Store (Android), one for App Store (iOS), one for Play Store internal track (Android), one for TestFlight (iOS)</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/b58be56cb6f422848c252b032a46e2a9.js\"></script><!--kg-card-end: html--><p>There’s 4 jobs that are part of the deploy stage, you can see that they simply execute some of the <strong><strong>fastlane</strong></strong> lanes that we created earlier with various options.</p><p>The main difference with these is <code><strong><strong>when: manual</strong></strong></code>. We don’t want these deploy jobs to be triggered automatically, because we don’t want to push builds to the AppStore/Play Store every time a new commit is pushed. So with this option, these jobs can be triggered manually after the build stage is complete.</p><p>Here’s the entire <code><strong><strong>gitlab-ci.yml</strong></strong></code><strong><strong> </strong></strong>that we put together, for reference.</p><!--kg-card-begin: html--><script src=\"https://gist.github.com/bbedward/a0fb271da243c408ae864bf3b1891610.js\"></script><!--kg-card-end: html--><p>You can do a lot more things with your pipeline. For example, with our open source app we also want to automate release tagging and upload APKs to GitHub, you can see that <a href=\"https://github.com/appditto/natrium_wallet_flutter/blob/master/.gitlab-ci.yml\" rel=\"noopener nofollow\"><strong><strong>here</strong></strong></a> for reference.</p><p>Check the file in and push it to your repository. You should the job trigger immediately.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-complete-pipeline.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/gitlab-complete-pipeline.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-complete-pipeline.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-complete-pipeline.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-complete-pipeline.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-complete-pipeline.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-complete-pipeline.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-complete-pipeline.png 2000w\" class=\"kg-image lazyload\" alt=\"Completed Pipeline — We’ll Address the Failure Next\"></div><figcaption>Completed Pipeline — We’ll Address the Failure Next</figcaption></figure><h2 id=\"setting-up-environment-variables\">Setting up environment variables</h2><p>Your android build probably failed if you’ve been following this guide. We had specified some environment variables in our .gitlab-ci.yml but didn’t define them anywhere.</p><p>We need to define the following:</p><ul><li><code><strong><strong>FLUTTER_PATH</strong></strong></code><strong><strong> — </strong></strong>This is the location you installed flutter on the server (example: <code>/Users/&lt;YOUR USER&gt;/flutter</code>)</li><li><code><strong><strong>ANDROID_SDK_PATH</strong></strong></code><strong><strong> — </strong></strong>This is the location the android SDK was installed on the server (example: <code>/Users/&lt;YOUR USER&gt;/Library/Android/sdk</code>)</li><li><code><strong><strong>ANDROID_KEY_STORE_PASSWORD</strong></strong></code><strong><strong> — </strong></strong>This is the <code>storePassword</code> value in our key.properties, AKA the password used to unlock your key store.</li><li><code><strong><strong>ANDROID_KEY_ALIAS</strong></strong></code><strong><strong> — </strong></strong>This is the name of the key used to sign your app, <code>keyAlias</code> in the key.properties file.</li><li><code><strong><strong>ANDROID_KEY_PASSWORD</strong></strong></code><strong><strong> — </strong></strong>This is the password for the key, <code>keyPassword</code> in the key.properties file.</li><li><code><strong><strong>ANDROID_KEYSTORE_PATH</strong></strong></code><strong><strong> — </strong></strong>This is the location of the <code>.jks</code> file. (example: <code>/Users/&lt;YOUR USER&gt;/android/keys/appditto.jks</code>)</li></ul><p>There’s two options for defining these variables that we’re going to cover.</p><ol><li>Placing them in <code><strong><strong>~/.zprofile</strong></strong></code> (Catalina and newer) or <code><strong><strong>~/.profile</strong></strong></code> (Mojave and older).</li><li>Setting them up in the GitLab interface.</li></ol><p>We already briefly covered #1, we’re going to choose #2 this time. There’s pros and cons to each approach but ultimately it’ll be up to you to decide.</p><p>Adding them in GitLab is very simple, just navigate to your project settings as seen below and add them:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/environment-variables.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/environment-variables.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/environment-variables.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/environment-variables.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/environment-variables.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/environment-variables.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/environment-variables.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/environment-variables.png 2000w\" class=\"kg-image lazyload\" alt=\"Setting Environment Variables for your GitLab Project\"></div><figcaption>Setting Environment Variables for your GitLab Project</figcaption></figure><p>And we can re-run our pipeline and can see that it passed!</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-finished-pipeline.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/gitlab-finished-pipeline.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-finished-pipeline.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-finished-pipeline.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-finished-pipeline.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-finished-pipeline.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-finished-pipeline.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/gitlab-finished-pipeline.png 2000w\" class=\"kg-image lazyload\" alt=\"Finished GitLab Pipeline\"></div><figcaption>Finished GitLab Pipeline</figcaption></figure><p>We can see that our deploy jobs did not get triggered, which is what we wanted. When we want to deploy it to the app store we can just login to GitLab and manually run whichever deployment we want.</p><h2 id=\"let-s-recap\">Let’s Recap</h2><p>We’ve successfully automated our workflow using GitLab CI/CD and Fastlane.</p><ul><li>On every commit to <code>master</code>, all of our tests and both builds will run</li><li>On successful builds, GitLab will archive the binaries so they are available for us to download later if needed.</li><li>Also on successful builds, our binaries will be available for us to deploy at our leisure with the press of a button.</li><li>If our tests or builds are failing, GitLab will alert us of the failure based on our preferences (email is the default)</li></ul><p>Now our code is continuously tested, built, and the latest builds are ready to deploy!</p><h2 id=\"thanks-for-reading-\">Thanks for reading!</h2><figure class=\"kg-card kg-image-card\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-1.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2020/01/appditto-preview-1.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-1.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-1.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-1.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-1.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-1.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-1.png 2000w\" class=\"kg-image lazyload\" alt=\"Don't forget to follow Appditto on social media\"></div></figure><p>Appditto Website: <a href=\"http://appditto.com/\" rel=\"noopener nofollow\"><strong><strong>appditto.com</strong></strong></a></p><p>Appditto Twitter: <a href=\"http://twitter.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p><p>Appditto Github: <a href=\"http://github.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p><p>Appditto Instagram: <a href=\"http://instagram.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p>","comment_id":"5ddbb8dde4679ea23a15023b","feature_image":"https://ghost.appditto.com/content/images/2019/12/flutter-automation-2-2.png","featured":false,"visibility":"public","created_at":"2019-11-25T11:19:57.000+00:00","updated_at":"2020-02-02T16:15:22.000+00:00","published_at":"2019-11-14T11:00:00.000+00:00","custom_excerpt":"Flutter is a modern mobile app development framework that lets you develop beautiful, highly performant apps. We already have multiple Flutter applications in production. The biggest pain point of our development process has been the testing, building, and deploying process for all of our apps.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"https://ghost.appditto.com/automate-your-flutter-workflow/","excerpt":"Flutter is a modern mobile app development framework that lets you develop beautiful, highly performant apps. We already have multiple Flutter applications in production. The biggest pain point of our development process has been the testing, building, and deploying process for all of our apps.","reading_time":19,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null},{"id":"5ddece2f2cf19825f43f84f6","uuid":"f2d84334-63a0-4b5f-9705-fe8c32e98637","title":"Natrium v2.1 — Security Audit & More","slug":"natrium-v2-1-security-audit-more","html":"<p><a href=\"http://natrium.io/\" rel=\"noopener nofollow\"><strong><strong>Natrium</strong></strong></a> has come a long way since its inception more than a year ago — it quickly became the most preferred mobile wallet for <a href=\"http://nano.org/\" rel=\"noopener nofollow\"><strong><strong>NANO</strong></strong></a> users around the world. Our own definition of Natrium is <strong><strong><em><em>Fast, Robust, &amp; Secure NANO Wallet</em></em></strong></strong>. We take all three of those principles very seriously with Natrium and, thanks to the Nano Foundation, we were able to take security to the next level.</p><h2 id=\"natrium-security-audit\">Natrium Security Audit</h2><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-security-audit.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-security-audit.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-security-audit.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-security-audit.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-security-audit.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-security-audit.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-security-audit.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-security-audit.png 2000w\" class=\"kg-image lazyload\" alt=\"Natrium audited by Red4Sec — No critical vulnerabilities.\"></div><figcaption>Natrium audited by Red4Sec — No critical vulnerabilities.</figcaption></figure><p>The Nano Foundation connected us with <a href=\"http://red4sec.com/\" rel=\"noopener nofollow\"><strong><strong>Red4Sec</strong></strong></a><em><em> — </em></em>an experienced, trusted security firm that has a lot of experience auditing and reviewing cryptocurrency projects, blockchains, and more. Red4Sec conducted a comprehensive security audit and they found that Natrium had <strong><strong><em><em>no critical vulnerabilities</em></em></strong></strong>. They had some recommendations to prevent lower risk vulnerabilities that require a higher skill, depend on certain factors — such as being rooted, or are related to protecting less sensitive information such as your public NANO address. Their recommendations have been implemented into Natrium v2.1.</p><p>Among these include an option to encrypt your seed with a user-provided password. While Natrium currently utilizes the built-in security of the device itself — using the <a href=\"https://developer.apple.com/documentation/security/keychain_services\" rel=\"noopener nofollow\">iOS KeyChain</a> and the <a href=\"https://developer.android.com/training/articles/keystore\" rel=\"noopener nofollow\">Android KeyStore</a>. Users can now add an additional layer of security to their wallet by encrypting their seed with a password that is not stored on the device. This is <em><em>optional</em></em>, but it may be beneficial for users who just want to take extra precautions, are using Natrium on a rooted or jailbroken device, or are using Natrium on a device that is not secured by a passcode, pin, or biometrics.</p><p>Some of the other changes related to the audit are less apparent, but they include: a warning when users are using a rooted or jailbroken device, cleaning up information leakage in application logs — for example Natrium logging your public nano_ address in general system logs, using a secure clipboard on iOS — disabling <a href=\"https://support.apple.com/en-us/HT209460\" rel=\"noopener nofollow\">Universal Clipboard</a> and setting an expiration for copying sensitive data.</p><p>We’re thankful to the Nano Foundation for providing us with the opportunity to be audited, and we’re proud that when people install Natrium they can be confident that their seed, private keys, and other sensitive data is <strong><strong><em><em>secure</em></em></strong></strong><em><em>.</em></em></p><h2 id=\"what-else-is-new-in-natrium-2-1\">What Else is New in Natrium 2.1?</h2><p>In addition to the audit-related changes mentioned above, Natrium 2.1 also adds the following new features:</p><ul><li><strong><strong>Live Support</strong></strong> — Chat with us in real-time from within the application. We saw a need to provide better support — people have questions, issues and they aren’t always sure where they should go. Now, they can reach us directly from within Natrium and get answers quickly. We hope that this can make the experience of using a non-custodial wallet, such as Natrium, less intimidating and easier for all users.</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-live-support.gif\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-live-support.gif\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-live-support.gif 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-live-support.gif 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-live-support.gif 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-live-support.gif 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-live-support.gif 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-live-support.gif 2000w\" class=\"kg-image lazyload\" alt=\"Natrium now has live support!\"></div><figcaption>Natrium now has live support!</figcaption></figure><ul><li><strong>QR Scanner Shortcut</strong> — Often times users are sending NANO using QR codes. While this has always been supported in Natrium, now it can be done slightly quicker simply by swiping up on the send button.</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-quick-scan.gif\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-quick-scan.gif\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-quick-scan.gif 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-quick-scan.gif 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-quick-scan.gif 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-quick-scan.gif 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-quick-scan.gif 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-quick-scan.gif 2000w\" class=\"kg-image lazyload\" alt=\"Quickly access QR scanner by swiping up on send button.\"></div><figcaption>Quickly access QR scanner by swiping up on send button.</figcaption></figure><ul><li><strong><strong>Hide Your Balance</strong></strong> — A community requested feature was to be able to hide your balance. If you’re recording a video or making a NANO purchase in public and don’t want onlookers to know how much NANO you own, then all you need to do is to tap your balance and it will disappear.</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-hide-balance.gif\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-hide-balance.gif\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-hide-balance.gif 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-hide-balance.gif 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-hide-balance.gif 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-hide-balance.gif 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-hide-balance.gif 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-hide-balance.gif 2000w\" class=\"kg-image lazyload\" alt=\"A community requested feature: Hide balance.\"></div><figcaption>A community requested feature: Hide balance.</figcaption></figure><ul><li><strong><strong>A New Language</strong></strong> — We’ve improved translations for many existing languages, we were also able to add <strong><strong>Japanese</strong></strong> as a new language, making Natrium even more accessible.</li><li><strong><strong>Face Unlock/Authentication on Android</strong></strong> — The Google Pixel 4 was recently announced, it is the first Android device with <em><em>secure</em></em> face authentication. We’ve added support for this into Natrium 2.1.</li></ul><p>As always, there’s plenty of minor bug fixes and performance improvements — the full progress can be seen on the <a href=\"https://github.com/appditto/natrium_wallet_flutter/commits\" rel=\"noopener nofollow\"><strong><strong>Natrium GitHub</strong></strong></a>.</p><h2 id=\"what-s-next-for-natrium\">What’s Next for Natrium?</h2><p>We’ve learned a lot since Natrium was initially unveiled over a year ago. Not just in terms of our skillsets, but also about how people commonly interact with Natrium and cryptocurrency wallets in general. We’ve also learned a lot of new things about <a href=\"http://flutter.io/\" rel=\"noopener nofollow\"><strong><strong>Flutter</strong></strong></a>, and Flutter has evolved since we’ve initially developed Natrium. We have developed a comprehensive plan to rebuild Natrium using all of the new knowledge we have acquired in the codebase and also in the interface. There’s a lot of things we know we can do better, so we’re going to.</p><p>In comes <strong><strong>Natrium 3</strong></strong>, a light re-design and comprehensive rewrite of a large part of Natrium’s code base. Natrium 3 is combination of all of the things we have learned to date — about how people interact with the app and also simply things we can do better in the codebase. Natrium 3 is our next milestone — we want to make Natrium leaner, faster, more efficient, and easier-to-use than ever before. We’re excited to share our progress on Natrium 3 with you in the coming weeks.</p><h2 id=\"support-natrium-development\">Support Natrium Development</h2><p>Natrium is open source and released under the MIT license — it is completely <em><em>free</em></em>. If you would like to support the development of Natrium, you can donate using the link below:</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://natrium.io/donate\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">NATRIUM | Donate</div><div class=\"kg-bookmark-description\">Help make Natrium better and support its development by donating</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://natrium.io/favicon/android-icon-192x192.png\"><span class=\"kg-bookmark-publisher\">Donate</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://natrium.io/assets/donate-preview-v2.png\"></div></a></figure><figure class=\"kg-card kg-image-card\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-donate.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-donate.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-donate.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-donate.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-donate.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-donate.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-donate.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-donate.png 2000w\" class=\"kg-image lazyload\" alt=\"natrium.io/donate\"></div></figure><h2 id=\"for-more-info-regular-updates-\">For more info &amp; regular updates:</h2><p>Natrium Twitter: <a href=\"https://twitter.com/NatriumIO\" rel=\"noopener nofollow\"><strong><strong>@NatriumIO</strong></strong></a></p><p>Natrium Website: <a href=\"http://natrium.io/\" rel=\"noopener nofollow\"><strong><strong>Natrium.io</strong></strong></a></p><p>Appditto Twitter: <a href=\"http://twitter.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@Appditto</strong></strong></a></p><p>Appditto Website: <a href=\"http://appditto.com/\" rel=\"noopener nofollow\"><strong><strong>Appditto.com</strong></strong></a></p><p>Appditto Github: <a href=\"http://github.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@Appditto</strong></strong></a></p>","comment_id":"5ddae141d3aaf695550129cb","feature_image":"https://ghost.appditto.com/content/images/2019/11/natrium-security-audit-1.png","featured":false,"visibility":"public","created_at":"2019-11-24T20:00:01.000+00:00","updated_at":"2020-02-02T10:21:24.000+00:00","published_at":"2019-10-23T20:00:00.000+00:00","custom_excerpt":"The Nano Foundation connected us with Red4Sec — an experienced, trusted security firm that has a lot of experience auditing and reviewing cryptocurrency projects, blockchains, and more. Red4Sec conducted a comprehensive security audit and they found that Natrium had no critical vulnerabilities.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"https://ghost.appditto.com/natrium-v2-1-security-audit-more/","excerpt":"The Nano Foundation connected us with Red4Sec — an experienced, trusted security firm that has a lot of experience auditing and reviewing cryptocurrency projects, blockchains, and more. Red4Sec conducted a comprehensive security audit and they found that Natrium had no critical vulnerabilities.","reading_time":4,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null},{"id":"5ddece2f2cf19825f43f84f8","uuid":"14f03eb8-4093-4a67-930e-9b7ecc4cd23a","title":"Meet Blaise — Simple, Sleek, & Secure Pascal Wallet now available on the iOS App Store and Google Play Store","slug":"blaise-now-available-on-the-ios-app-store-and-google-play-store","html":"<p><a href=\"https://blaisewallet.com/\" rel=\"noopener nofollow\"><strong><strong>Blaise</strong></strong></a> is a next-generation wallet for the <a href=\"https://pascalcoin.org/\" rel=\"noopener nofollow\"><strong><strong>PascalCoin</strong></strong></a> cryptocurrency. PascalCoin is infinitely scalable, decentralized, and offers many advanced features. PascalCoin is capable of zero-fee, instant transactions, storing data on-chain, smart contracts, and more. Blaise is now available on the <a href=\"https://play.google.com/store/apps/details?id=com.appditto.blaise\" rel=\"noopener nofollow\"><strong><strong>Google Play Store</strong></strong></a> and the <a href=\"https://apps.apple.com/us/app/blaise-pascal-wallet/id1473011216\" rel=\"noopener nofollow\"><strong><strong>iOS App Store</strong></strong></a>!</p><h2 id=\"blaise-1-0-is-now-available-\">Blaise 1.0 is Now Available!</h2><p>After a month of <a href=\"https://medium.com/appditto/meet-blaise-simple-sleek-secure-pascalcoin-wallet-public-beta-now-available-for-ios-and-1f503fc1302d\" rel=\"noopener\">beta testing</a> and new developments, <a href=\"https://blaisewallet.com/\" rel=\"noopener nofollow\">Blaise</a> is now available on the <a href=\"https://play.google.com/store/apps/details?id=com.appditto.blaise\" rel=\"noopener nofollow\"><strong><strong>Google Play Store</strong></strong></a> and the <a href=\"https://apps.apple.com/us/app/blaise-pascal-wallet/id1473011216\" rel=\"noopener nofollow\"><strong><strong>iOS App Store</strong></strong></a>!</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta-2.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/blaise-beta-2.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta-2.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta-2.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta-2.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta-2.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta-2.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta-2.png 2000w\" class=\"kg-image lazyload\" alt=\"Blaise is a simple, sleek &amp; secure Pascal wallet\"></div><figcaption>Blaise is a simple, sleek &amp; secure Pascal wallet</figcaption></figure><h2 id=\"pascalcoin-unique-challenges\">PascalCoin &amp; Unique Challenges</h2><p>PascalCoin is an <a href=\"https://www.pascalcoin.org/whitepapers#wp_6\" rel=\"noopener nofollow\">infinitely scalable</a> cryptocurrency with a lot of innovative features including <a href=\"https://www.pascalcoin.org/whitepapers#wp_1\" rel=\"noopener nofollow\">zero-fee transactions</a>, on-chain unique <a href=\"https://www.pascalcoin.org/whitepapers#wp_2\" rel=\"noopener nofollow\">account names</a>, a <a href=\"https://www.pascalcoin.org/whitepapers#wp_4\" rel=\"noopener nofollow\">community-driven governance structure</a>, and much more.</p><p>PascalCoin’s unique design comes with some unique challenges that many consider a barrier for adoption, including:</p><ol><li>Obtaining an Account— Accounts are “mined” and stored on-chain, they cannot simply be generated through a key derivation function like most other cryptocurrencies. This has numerous benefits including: simple, easy-to-remember account numbers instead of long, complex hex-strings, reducing the “squatting” on account names (as they are stored on-chain), and the ability to trade, sell them (e.g. for vanity purposes, or to sell a name). Unfortunately, the process of getting an account has been confusing and difficult for many users.</li><li>PascalCoin had a lack of wallet options, particularly light wallets. The community wanted an intuitive wallet that would be incredibly quick to setup and use, while still supporting PascalCoin’s numerous and innovative features.</li></ol><h2 id=\"meet-blaise\">Meet Blaise</h2><p>Blaise was developed for PascalCoin by <a href=\"https://appditto.com/\" rel=\"noopener nofollow\"><strong><strong>Appditto</strong></strong></a> as a part of PIP (PascalCoin Improvement Proposal) #35C. Solving these unique challenges were fundamental goals of the Blaise project — and we’ve succeeded. Blaise solves both of these challenges — it’s innovative, unique, and easy to use. The account process has never been easier.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive-1.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive-1.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive-1.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive-1.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive-1.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive-1.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive-1.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive-1.png 2000w\" class=\"kg-image lazyload\" alt=\"With Blaise, you can easily manage all your operations\"></div><figcaption>With Blaise, you can easily manage all your operations</figcaption></figure><h2 id=\"getting-an-account-made-simple\">Getting an Account, Made Simple</h2><p>Blaise introduces an innovative “borrow an account” system. After just a couple of taps, you‘ll be given a “borrowed account.” Simply send some Pascal to it and the account will be permanently transferred to your public key. The only cost is a small 0.25 pascal fee (less than $0.04, equivalent), that will be deducted automatically from the funds you send. The account, once transferred, is yours permanently.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-first-account.gif\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/blaise-first-account.gif\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-first-account.gif 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-first-account.gif 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-first-account.gif 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-first-account.gif 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-first-account.gif 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-first-account.gif 2000w\" class=\"kg-image lazyload\" alt=\"With Blaise, getting your first Pascal account is super easy.\"></div><figcaption>With Blaise, getting your first Pascal account is super easy.</figcaption></figure><h2 id=\"send-pascal-however-you-want\">Send Pascal, However You Want</h2><p>Sending Pascal is easier and faster than ever with Blaise. Converting to local currency, scanning a QR code, adding payloads, sending to an on-chain account name, a feature-rich address book. All of these options are bundled into a streamlined, innovative interface.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send.gif\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/blaise-send.gif\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send.gif 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send.gif 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send.gif 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send.gif 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send.gif 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send.gif 2000w\" class=\"kg-image lazyload\" alt=\"Blaise makes sending Pascal fast &amp; easy with various options\"></div><figcaption>Blaise makes sending Pascal fast &amp; easy with various options</figcaption></figure><h2 id=\"blaise-speaks-multiple-languages\">Blaise Speaks Multiple Languages</h2><p>The entire interface, made to speak your language. Choosing your native language or preferred local currency couldn’t be any easier.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-multi-language.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/blaise-multi-language.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-multi-language.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-multi-language.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-multi-language.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-multi-language.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-multi-language.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-multi-language.png 2000w\" class=\"kg-image lazyload\" alt=\"Blaise supports multiple languages\"></div><figcaption>Blaise supports multiple languages</figcaption></figure><h2 id=\"the-many-faces-of-blaise\">The Many Faces of Blaise</h2><p>Blaise has multiple looks that have been meticulously crafted down to the finest details — including animations, illustrations, and even the app icon itself.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-themes.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/blaise-themes.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-themes.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-themes.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-themes.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-themes.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-themes.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-themes.png 2000w\" class=\"kg-image lazyload\" alt=\"Blaise has meticulously crafted themes\"></div><figcaption>Blaise has meticulously crafted themes</figcaption></figure><h2 id=\"receiving-pascal\">Receiving Pascal</h2><p>Ding! Blaise will alert you when you receive Pascal to any of your accounts through a push notification. Tired of constantly checking your wallet to see if that exchange withdraw has finally been processed? With Blaise, there’s no guesswork and you’ll know exactly when funds hit your account.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-notifications.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/blaise-notifications.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-notifications.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-notifications.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-notifications.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-notifications.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-notifications.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-notifications.png 2000w\" class=\"kg-image lazyload\" alt=\"Blaise notifies you when you receive Pascal\"></div><figcaption>Blaise notifies you when you receive Pascal</figcaption></figure><h2 id=\"the-technology-behind-the-blaise-wallet\">The Technology Behind the Blaise Wallet</h2><p>We developed Blaise Wallet using the latest in mobile application frameworks, <a href=\"https://flutter.io/\" rel=\"noopener nofollow\"><strong><strong>Flutter</strong></strong></a>. Flutter applications are developed using the <a href=\"https://dartlang.org/\" rel=\"noopener nofollow\"><strong><strong>Dart</strong></strong></a> programming language.</p><p>There’s three primary components that drive the Blaise Wallet:</p><ol><li><a href=\"https://github.com/appditto/pascaldart\" rel=\"noopener nofollow\"><strong><strong>PascalDart</strong></strong></a> — A 100% dart PascalCoin library, it supports key generation, ecliptic curve cryptography — including ECDH signatures and ECIES encryption, a full JSON-RPC API for interacting with the PascalCoin node, and many other features that are critical to the operation of Blaise.</li><li><a href=\"https://github.com/appditto/blaise_wallet_flutter\" rel=\"noopener nofollow\"><strong><strong>Blaise Flutter Application</strong></strong></a><strong><strong> </strong></strong>— The user-facing application. It includes everything the users see and interact with, it also is responsible for critical functions such as secure key storage. The business logic lives here.</li><li><a href=\"https://github.com/appditto/blaise_wallet_server\" rel=\"noopener nofollow\"><strong><strong>Blaise Server</strong></strong></a> — The server that powers Blaise. It is written in <a href=\"http://python.org/\" rel=\"noopener nofollow\">Python</a> — using <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"noopener nofollow\">asyncio</a> and <a href=\"https://aiohttp.readthedocs.io/en/stable/\" rel=\"noopener nofollow\">AIOHTTP</a> for incredibly high performance and high concurrency. It powers the major “borrow account” feature, it provides a web-socket service so it can push price updates and new transactions to users, it is responsible for sending push notifications using <a href=\"https://firebase.google.com/docs/cloud-messaging\" rel=\"noopener nofollow\">Firebase Cloud Messaging</a>, it also enhances server security by restricting access to the PascalCoin node.</li></ol><p>All of these are open source and released under the permissive <a href=\"https://github.com/appditto/blaise_wallet_flutter/blob/master/LICENSE\" rel=\"noopener nofollow\">MIT License</a>.</p><h2 id=\"get-blaise-\">Get Blaise!</h2><p>Blaise is completely free and compatible with most Android and iOS devices.</p><p><a href=\"https://play.google.com/store/apps/details?id=com.appditto.blaise\" rel=\"noopener nofollow\"><strong><strong>Get it for Android on the Google Play Store</strong></strong></a><strong><strong>!</strong></strong></p><p><a href=\"https://apps.apple.com/us/app/blaise-pascal-wallet/id1473011216\" rel=\"noopener nofollow\"><strong><strong>Get it for iOS on the App Store</strong></strong></a><strong><strong>!</strong></strong></p><p><a href=\"https://blaisewallet.com/\" rel=\"noopener nofollow\"><strong><strong>Visit the Blaise Website!</strong></strong></a></p><p>Users who do not have the Google Play Store available in their region or on their device can get the latest releases from <a href=\"https://github.com/appditto/blaise_wallet_flutter/releases\" rel=\"noopener nofollow\"><strong><strong>GitHub</strong></strong></a>.</p><h2 id=\"thanks-for-reading-\">Thanks for reading!</h2><figure class=\"kg-card kg-image-card\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-2.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2020/01/appditto-preview-2.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-2.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-2.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-2.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-2.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-2.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-2.png 2000w\" class=\"kg-image lazyload\" alt=\"Don't forget to follow Appditto on social media\"></div></figure><p>Appditto Website: <a href=\"http://appditto.com/\" rel=\"noopener nofollow\"><strong><strong>appditto.com</strong></strong></a></p><p>Appditto Twitter: <a href=\"http://twitter.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p><p>Appditto Github: <a href=\"http://github.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p><p>Appditto Instagram: <a href=\"http://instagram.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p>","comment_id":"5ddbb1fcfa31649e88349300","feature_image":"https://ghost.appditto.com/content/images/2019/11/blaise-send-receive-2.png","featured":false,"visibility":"public","created_at":"2019-11-25T10:50:36.000+00:00","updated_at":"2020-01-31T10:35:09.000+00:00","published_at":"2019-08-20T10:54:00.000+00:00","custom_excerpt":"Blaise is a next-generation wallet for the PascalCoin cryptocurrency. PascalCoin is infinitely scalable, decentralized, and offers many advanced features. Blaise is now available on the Google Play Store and the iOS App Store!","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"https://ghost.appditto.com/blaise-now-available-on-the-ios-app-store-and-google-play-store/","excerpt":"Blaise is a next-generation wallet for the PascalCoin cryptocurrency. PascalCoin is infinitely scalable, decentralized, and offers many advanced features. Blaise is now available on the Google Play Store and the iOS App Store!","reading_time":4,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null},{"id":"5ddece2f2cf19825f43f84f7","uuid":"13a0416f-113c-472e-84d2-20f5011c670e","title":"Meet Blaise: Simple, Sleek & Secure Pascal Wallet — Public Beta now Available for iOS and Android","slug":"blaise-public-beta-now-available-for-ios-and-android","html":"<p>Blaise is a next-generation wallet for the <a href=\"http://pascalcoin.org/\" rel=\"noopener nofollow\">Pascal</a> cryptocurrency. Pascal is infinitely scalable, decentralized, and offers many advanced features. Pascal is capable of zero-fee, instant transactions, storing data on-chain, smart contracts, and more.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/blaise-beta.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-beta.png 2000w\" class=\"kg-image lazyload\" alt=\"Meet with Blaise: Simple, Sleek &amp; Secure Pascal Wallet\"></div><figcaption>Meet with Blaise: Simple, Sleek &amp; Secure Pascal Wallet</figcaption></figure><h2 id=\"what-is-blaise\">What is Blaise?</h2><p>Blaise is an all-new wallet developed with Google’s <a href=\"https://flutter.io/\" rel=\"noopener nofollow\">Flutter</a> framework. It is being developed as part of the Pascal Improvement Proposal (PIP) #31. The goal has been to create an intuitive, secure wallet that supports both the essential and advanced features the Pascal blockchain is capable of.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-send-receive.png 2000w\" class=\"kg-image lazyload\" alt=\"Send &amp; Receive Pascal, Manage Your Operations\"></div><figcaption>Send &amp; Receive Pascal, Manage Your Operations</figcaption></figure><h2 id=\"the-technology-behind-the-blaise-wallet\">The Technology Behind the Blaise Wallet</h2><p>We developed Blaise Wallet using the latest in mobile application frameworks, <a href=\"https://flutter.io/\" rel=\"noopener nofollow\">Flutter</a>. Flutter applications are developed using the <a href=\"https://dartlang.org/\" rel=\"noopener nofollow\">Dart</a> programming language.</p><p>The first technological hurdle was to develop an offline-signing library that would allow the app to sign and create operations completely on the device itself, this results in <strong><strong>private keys never being sent to the server</strong></strong>. The library we developed is called <a href=\"https://github.com/appditto/pascaldart\" rel=\"noopener nofollow\">pascaldart</a> — it implements signing, encryption including ecies encryption for payloads, JSON-RPC, and more. It is available publicly <a href=\"https://pub.dev/packages/pascaldart\" rel=\"noopener nofollow\">here</a> and is also on <a href=\"https://github.com/appditto/pascaldart\" rel=\"noopener nofollow\">Github</a>.</p><p>Another major consideration when dealing with private-key security is storage of the private key. The private key needs to be stored securely on the user’s device — we use the native <a href=\"https://developer.android.com/training/articles/keystore\" rel=\"noopener nofollow\">Android KeyStore</a>, and the <a href=\"https://developer.apple.com/documentation/security/keychain_services\" rel=\"noopener nofollow\">iOS KeyChain</a> for secure key storage.</p><p>For the application state we are using <a href=\"https://pub.dev/packages/mobx\" rel=\"noopener nofollow\">mobx</a>. This is a reactive state management system that efficiently maintains the entire state of the application and all of the user’s accounts.</p><h2 id=\"user-interface-experience\">User Interface &amp; Experience</h2><p><a href=\"http://pascalcoin.org/\" rel=\"noopener nofollow\">Pascal</a> has a feature rich protocol with a lot of different capabilities. We tried to highlight these features without overwhelming new users. We created a simple &amp; friendly interface that can suit both new users and enthusiasts alike. We made various custom animations and illustrations to create an easily understandable and enjoyable experience for everyone.</p><p>We also developed various different features that would make operation of the wallet faster while feeling familiar to users with different levels of knowledge about the Pascal protocol, such as the contacts feature.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/Contacts.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/Contacts.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/Contacts.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/Contacts.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/Contacts.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/Contacts.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/Contacts.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/Contacts.png 2000w\" class=\"kg-image lazyload\" alt=\"With contacts, sending &amp; receiving Pascal is easier and more secure\"></div><figcaption>With contacts, sending &amp; receiving Pascal is easier and more secure</figcaption></figure><p>At Appditto we pride ourselves on using the latest, most innovative technologies in order to provide not only the best product possible — but also the best user experience. Today we’re ready to share Blaise with the public — <strong>Blaise is now available for open beta testing on iOS TestFlight and on the Google Play Store for Android users.</strong></p><h2 id=\"how-do-i-try-blaise\">How do I try Blaise?</h2><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-dark-mode.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/blaise-dark-mode.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-dark-mode.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-dark-mode.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-dark-mode.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-dark-mode.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-dark-mode.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/blaise-dark-mode.png 2000w\" class=\"kg-image lazyload\" alt=\"Blaise Dark Mode\"></div><figcaption>Blaise Dark Mode</figcaption></figure><p>Anyone can sign up for the beta as long as they have an iPhone with iOS 10 or newer or an Android device with Android 4.4 or newer.</p><p><a href=\"https://play.google.com/apps/testing/com.appditto.blaise\" rel=\"noopener nofollow\">Android Users — Sign up by clicking here!</a></p><p><a href=\"https://testflight.apple.com/join/hd72GGk2\" rel=\"noopener nofollow\">iOS Users — Sign up by clicking here!</a></p><h2 id=\"what-s-next\">What’s Next?</h2><p>There’s a lot of work to be done still — including translations, currency conversions, easy account acquisition, and a web-socket service that will push new transactions as well as allow for push notifications.</p><p>Pascal accounts are acquired by mining, unlike traditional cryptocurrencies. Users need to acquire one before they can interact with the Pascal network. Our primary focus is streamlining this experience and making it as easy for users as possible.</p><p>We’ll be pushing updates in the coming weeks introducing these new features and improvements, you can follow our progress on the <a href=\"https://discord.gg/sJqcgtD\" rel=\"noopener nofollow\">Pascal Discord</a>, in the channel <strong><strong>#pip-0031c.</strong></strong></p><h2 id=\"thanks-for-reading-\">Thanks for reading!</h2><figure class=\"kg-card kg-image-card\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-3.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2020/01/appditto-preview-3.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-3.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-3.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-3.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-3.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-3.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-3.png 2000w\" class=\"kg-image lazyload\" alt=\"Don't forget to follow Appditto on social media\"></div></figure><p>Appditto Website: <a href=\"http://appditto.com/\" rel=\"noopener nofollow\"><strong><strong>appditto.com</strong></strong></a></p><p>Appditto Twitter: <a href=\"http://twitter.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p><p>Appditto Github: <a href=\"http://github.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p><p>Appditto Instagram: <a href=\"http://instagram.com/appditto\" rel=\"noopener nofollow\"><strong>@appditto</strong></a></p>","comment_id":"5ddbae71fa31649e883492ab","feature_image":"https://ghost.appditto.com/content/images/2019/11/blaise-beta-1.png","featured":false,"visibility":"public","created_at":"2019-11-25T10:35:29.000+00:00","updated_at":"2020-01-26T01:28:57.000+00:00","published_at":"2019-07-21T10:34:00.000+00:00","custom_excerpt":"Blaise is an all-new wallet developed with Google’s Flutter framework. It is being developed as part of the Pascal Improvement Proposal (PIP) #31. The goal has been to create an intuitive, secure wallet that supports both the essential and advanced features the Pascal blockchain is capable of.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"https://ghost.appditto.com/blaise-public-beta-now-available-for-ios-and-android/","excerpt":"Blaise is an all-new wallet developed with Google’s Flutter framework. It is being developed as part of the Pascal Improvement Proposal (PIP) #31. The goal has been to create an intuitive, secure wallet that supports both the essential and advanced features the Pascal blockchain is capable of.","reading_time":3,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null},{"id":"5ddece2f2cf19825f43f84f5","uuid":"fe7315c9-034f-460b-b454-e2d184640211","title":"Natrium’s Next Big Update Released on Android and iOS","slug":"natriums-next-big-update-released-on-android-and-ios","html":"<p>A little over a month ago we released <a href=\"https://medium.com/appditto/natrium-2-0-nano-mobile-wallet-now-available-on-the-ios-app-store-c7d87c0c7b5a\" rel=\"noopener\">Natrium 2.0</a> — a next-generation mobile wallet for <a href=\"https://nano.org/\" rel=\"noopener nofollow\">NANO</a> . This upgrade has now been fully rolled out to the <a href=\"https://play.google.com/store/apps/details?id=co.banano.natriumwallet\" rel=\"noopener nofollow\">Google Play Store</a>, and some new features and improvements have been rolled out the the iOS App Store as well.</p><h2 id=\"natrium-is-a-next-generation-app-for-a-next-generation-cryptocurrency\">Natrium is a Next-Generation App for a Next-Generation Cryptocurrency</h2><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-android.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-android.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-android.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-android.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-android.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-android.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-android.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-android.png 2000w\" class=\"kg-image lazyload\" alt=\"All new Natrium features are now available on Android\"></div><figcaption>All new Natrium features are now available on Android</figcaption></figure><p>Natrium is a wallet built for NANO that is built using the fast, native cross-platform framework — <a href=\"https://flutter.io/\" rel=\"noopener nofollow\">Flutter</a>. Natrium is <em><em>fast </em></em>and it’s full of features: Paper wallet / seed sweeping, push notifications, multiple accounts, contacts, numerous currency conversions and translations, and more.</p><h2 id=\"representatives-decentralization\">Representatives &amp; Decentralization</h2><p>Decentralization is a key component to making NANO network stronger. Because of this, we started focusing on the things that can speed up this process and make it easier. Today we have the first result of our efforts: We are adding a pre-populated list of representatives that have a relatively small voting-weight — provided by <a href=\"https://mynano.ninja/\" rel=\"noopener nofollow\">My Nano Ninja</a>. This makes choosing a quality representative incredibly easy — just tap “Pick From a List” button and pick a representative, no need to go search for a representative and copy paste the address. But if you want to do that, you still can with the “Manual Entry” button.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-representative-list.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-representative-list.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-representative-list.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-representative-list.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-representative-list.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-representative-list.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-representative-list.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-representative-list.png 2000w\" class=\"kg-image lazyload\" alt=\"Easy to use Representative List\"></div><figcaption>Easy to use Representative List</figcaption></figure><h2 id=\"nano-prefix\">Nano Prefix</h2><p>Existing Android users using Natrium are already familiar with this. Their address begins with <code>nano_</code> instead of <code>xrb_</code>. For iOS users, we reverted to using <code>xrb_</code> due to lack of support with some other services in the Nano ecosystem. However, with the news about the upcoming <a href=\"https://github.com/nanocurrency/nano-node/pull/1771\" rel=\"noopener nofollow\">Nano V19 emitting </a><code><a href=\"https://github.com/nanocurrency/nano-node/pull/1771\" rel=\"noopener nofollow\">nano_</a></code> prefixes — Natrium is now using <code>nano_</code> everywhere. You can still send to either type of prefix, but throughout the app addresses will be represented with <code>nano_</code>. For some parts such as account history, it will still display with <code>xrb_</code> until we upgrade our node to V19. After that, app-wide everything will be using the new prefix.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-nano-prefix.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-nano-prefix.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-nano-prefix.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-nano-prefix.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-nano-prefix.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-nano-prefix.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-nano-prefix.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-nano-prefix.png 2000w\" class=\"kg-image lazyload\" alt=\"nano_ prefix\"></div><figcaption>nano_ prefix</figcaption></figure><h2 id=\"more-than-a-wallet\">More Than a Wallet</h2><p>As you may now, we have been focused strictly on creating a solid wallet for Nano that everyone would enjoy using everyday, from the most avid Nano enthusiast to someone that just met with Nano.</p><p>Today, we are proud to announce that we are rebranding. Instead of “Natrium Wallet”, the new preferred name is simply “Natrium”. We‘re working on other Nano-related products, many of which will be a vital part of the Natrium app. All these developments will be a part of the Natrium brand — interested in what we’re doing? Follow us on <strong><a href=\"https://twitter.com/appditto\">Tw<strong>itter</strong></a></strong>.</p><h2 id=\"for-more-info-regular-updates-\">For more info &amp; regular updates:</h2><p>Natrium Twitter: <a href=\"https://twitter.com/NatriumIO\" rel=\"noopener nofollow\"><strong><strong>@NatriumIO</strong></strong></a></p><p>Natrium Website: <a href=\"https://natrium.io/\" rel=\"noopener nofollow\"><strong><strong>natrium.io</strong></strong></a></p><p>Appditto Twitter: <a href=\"https://twitter.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p><p>Appditto Website: <a href=\"https://appditto.com/\" rel=\"noopener nofollow\"><strong><strong>appditto.com</strong></strong></a></p><p>Appditto Github: <a href=\"https://github.com/appditto\" rel=\"noopener nofollow\"><strong><strong>@appditto</strong></strong></a></p>","comment_id":"5ddaba699307c18ec166ab37","feature_image":"https://ghost.appditto.com/content/images/2019/11/natrium-android-1.png","featured":false,"visibility":"public","created_at":"2019-11-24T17:14:17.000+00:00","updated_at":"2019-12-07T13:37:33.000+00:00","published_at":"2019-04-20T17:19:00.000+00:00","custom_excerpt":"A little over a month ago we released Natrium 2.0 — a next-generation mobile wallet for NANO . This upgrade has now been fully rolled out to the Google Play Store, and some new features and improvements have been rolled out the the iOS App Store as well.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"https://ghost.appditto.com/natriums-next-big-update-released-on-android-and-ios/","excerpt":"A little over a month ago we released Natrium 2.0 — a next-generation mobile wallet for NANO . This upgrade has now been fully rolled out to the Google Play Store, and some new features and improvements have been rolled out the the iOS App Store as well.","reading_time":2,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null},{"id":"5ddece2f2cf19825f43f84f4","uuid":"c7b4be5f-52b4-4c77-aa03-2f1592aeb53b","title":"Natrium 2.0 - NANO Mobile Wallet now Available on the iOS App Store!","slug":"natrium-2-0-nano-mobile-wallet-now-available-on-the-ios-app-store","html":"<p>Natrium — a mobile wallet for the NANO currency — is now available on the <a href=\"https://itunes.apple.com/us/app/natrium/id1451425707?ls=1&amp;mt=8\" rel=\"noopener\">iOS App Store</a>!</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-2.0-feature.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-2.0-feature.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-2.0-feature.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-2.0-feature.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-2.0-feature.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-2.0-feature.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-2.0-feature.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-2.0-feature.png 2000w\" class=\"kg-image lazyload\" alt=\"Natrium 2.0 is available on the App Store!\"></div><figcaption>Natrium 2.0 is available on the App Store!</figcaption></figure><p>Natrium is an intuitive, user-friendly mobile wallet for the <a href=\"https://nano.org\" rel=\"noopener\">NANO cryptocurrency</a>. Natrium 1.0 was originally released in November on Android and the reaction to the release was overwhelmingly positive. Since then, we’ve been investing hundreds of hours on the next generation of Natrium.</p><p>Natrium 2.0 was rewritten from the ground up using <a href=\"https://flutter.io\" rel=\"noopener\">Flutter</a>, a cross-platform framework that allows Android and iOS apps to share the same codebase while also providing native-performance.</p><p>We’ve added many new features since Natrium’s initial release — most notably the ability to redeem paper wallets instantly. We’re excited to announce some big new features that are available today.</p><h2 id=\"multi-accounts-made-simple\">Multi-accounts, Made Simple</h2><p>Probably the most requested feature of our users has been the ability to manage multiple accounts from within Natrium. The biggest challenge we had to overcome when considering this was, how can we accomplish this without cluttering the interface and obstructing the current flow of the interface?</p><p>Today as part of this release, <strong>multiple accounts are now supported in Natrium!</strong></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-multi-accounts.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-multi-accounts.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-multi-accounts.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-multi-accounts.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-multi-accounts.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-multi-accounts.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-multi-accounts.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-multi-accounts.png 2000w\" class=\"kg-image lazyload\" alt=\"Easy to use &amp; familiar multi-account implementation\"></div><figcaption>Easy to use &amp; familiar multi-account implementation</figcaption></figure><p>We expanded the interface to allow for multiple accounts by using an account-switching interface that most people are already familiar with — similar to some of the most popular apps people use such as Twitter, eBay, Telegram, and many more. You can add up to 20 accounts, hide them, and rename them. Switching to a different account takes only one tap, then you’re instantly ready to use it. Push notifications work for all 20 accounts, tapping a notification will open the app and automatically switch to the account the notification is for — making the entire experience as seamless as ever.</p><h2 id=\"system-wide-themes\">System-wide Themes</h2><p>Natrium 2.0 introduces a comprehensive theme system. From clean and professional to wacky and bright, there’s a style for everyone. These themes customize the entire experience — even down to the app icon itself.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-system-wide-themes.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-system-wide-themes.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-system-wide-themes.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-system-wide-themes.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-system-wide-themes.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-system-wide-themes.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-system-wide-themes.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-system-wide-themes.png 2000w\" class=\"kg-image lazyload\" alt=\"System-wide themes\"></div><figcaption>System-wide themes</figcaption></figure><p>We plan to add more themes over time, and are considering implementing the concept of un-lockable themes. For example, change your representative to a highly rated-one from <a href=\"https://mynano.ninja/\" rel=\"noopener\">My Nano Ninja</a> — then unlock a new theme. This is just one of the possible ways that we can expand the themes in the future to make the experience more interactive and more fun.</p><h2 id=\"near-instant-notifications\">Near Instant Notifications</h2><figure class=\"kg-card kg-image-card kg-card-hascaption\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-notifications.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2019/11/natrium-notifications.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-notifications.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-notifications.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-notifications.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-notifications.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-notifications.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2019/11/natrium-notifications.png 2000w\" class=\"kg-image lazyload\" alt=\"Get notifications when you receive Nano, under a second\"></div><figcaption>Get notifications when you receive Nano, under a second</figcaption></figure><p>One of Natrium’s most unique features, push notifications, isn’t all that new but it has gotten even better since we upgraded our backend to the new <a href=\"https://medium.com/nanocurrency/the-dolphin-release-has-arrived-6df21c4f06a8\">Nano v18 Dolphin</a> release. We’ve seen notifications arrive in <strong>less than a second</strong> after the NANO has been sent. This is an incredible step forward for NANO and the future of cryptocurrency payments.</p><!--kg-card-begin: html--><blockquote class=\"reddit-card\" data-card-created=\"1574615296\"><a href=\"https://www.reddit.com/r/nanocurrency/comments/atgozh/testing_nanos_speed_and_natriums_responsive/\">Testing Nano’s speed and Natrium’s responsive notifications. This is crazy fast now</a> from <a href=\"http://www.reddit.com/r/nanocurrency\">r/nanocurrency</a></blockquote>\n<script async src=\"//embed.redditmedia.com/widgets/platform.js\" charset=\"UTF-8\"></script><!--kg-card-end: html--><h2 id=\"other-features\">Other Features</h2><p>Full list/documentation at <a href=\"https://github.com/appditto/natrium_wallet_flutter\" rel=\"noopener\"><strong>Github</strong></a>:</p><ul><li>Send/Receive NANO securely</li><li>View your entire transaction history</li><li>View transaction details using <a href=\"https://nanocrawler.cc\" rel=\"noopener\">NanoCrawler</a></li><li>Share a personalized card with your QR code and address as a PNG image</li><li>Manage multiple accounts on a seed</li><li>Fully featured contacts/address book</li><li>Change your representative</li><li>Biometric authentication (FaceID+TouchID)</li><li>QR scanning</li><li>Deep link/URI support)</li><li>Paper wallet loader/Seed sweeper</li><li>Push notifications</li><li>30+ currency conversions, more than 20 languages supported</li></ul><h2 id=\"what-s-next\">What’s next?</h2><p>We’re going to continue our commitment to NANO and Natrium — Android users will be receiving the Natrium 2.0 update initially <em>as a BETA </em>within the next week or two.</p><p>We have a new support channel on Discord at <a href=\"https://support.natrium.io\" rel=\"noopener\">https://support.natrium.io</a> — feel free to stop in to report any feedback you may have.</p><h2 id=\"follow-us-for-updates\">Follow us for updates</h2><figure class=\"kg-card kg-image-card\"><div class=\"image-wrapper\"><img datasizes=\"auto\" src=\"https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-4.png\" srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_100,c_limit,q_1,f_auto,pg_1/https://ghost.appditto.com/content/images/2020/01/appditto-preview-4.png\" data-srcset=\"https://res.cloudinary.com/appditto/image/fetch/w_300,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-4.png 300w, https://res.cloudinary.com/appditto/image/fetch/w_600,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-4.png 600w, https://res.cloudinary.com/appditto/image/fetch/w_900,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-4.png 900w, https://res.cloudinary.com/appditto/image/fetch/w_1200,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-4.png 1200w, https://res.cloudinary.com/appditto/image/fetch/w_1500,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-4.png 1500w, https://res.cloudinary.com/appditto/image/fetch/w_2000,c_limit,q_80,f_auto/https://ghost.appditto.com/content/images/2020/01/appditto-preview-4.png 2000w\" class=\"kg-image lazyload\" alt=\"Don't forget to follow Appditto on social media\"></div></figure><p>Follow <a href=\"https://medium.com/u/a230aed74e28\"><strong>Appditto</strong></a> on social media to stay up to date with news and updates. Looking for a cross-platform app for your business?</p><p>Reach out at <a href=\"https://appditto.com\" rel=\"noopener\"><strong>appditto.com</strong></a></p><p>Twitter: <a href=\"https://twitter.com/appditto\" rel=\"noopener\"><strong>@appditto</strong></a></p><p>Github: <a href=\"https://github.com/appditto\" rel=\"noopener\"><strong>@appditto</strong></a></p><p>Reddit: <a href=\"http://reddit.com/u/appditto\" rel=\"noopener\"><strong>@appditto</strong></a></p>","comment_id":"5ddab66a9307c18ec166aacd","feature_image":"https://ghost.appditto.com/content/images/2019/11/natrium-2.0-feature-1.png","featured":false,"visibility":"public","created_at":"2019-11-24T16:57:14.000+00:00","updated_at":"2020-01-26T01:29:26.000+00:00","published_at":"2019-03-09T17:00:00.000+00:00","custom_excerpt":"Natrium 2.0 was rewritten from the ground up using Flutter, a cross-platform framework that allows Android and iOS apps to share the same codebase while also providing native-performance.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"https://ghost.appditto.com/natrium-2-0-nano-mobile-wallet-now-available-on-the-ios-app-store/","excerpt":"Natrium 2.0 was rewritten from the ground up using Flutter, a cross-platform framework that allows Android and iOS apps to share the same codebase while also providing native-performance.","reading_time":3,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null}]