/* For transition */
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  transition: $args;
}

@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

/* box-shadow */

@mixin box-shadow($shadows...) {
  -webkit-box-shadow: $shadows;
  -moz-box-shadow: $shadows;
  box-shadow: $shadows;
}

/* box-sizing */

@mixin box-sizing($args...) {
  -webkit-box-sizing: $args;
  -moz-box-sizing: $args;
  box-sizing: $args;
}

/* border-radius */

@mixin border-radius($radii...) {
  -webkit-border-radius: $radii;
  -moz-border-radius: $radii;
  border-radius: $radii;
}

//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-above(sm) {}
@mixin respond-above($grid-breakpoint) {
  // If the grid-breakpoint exists in the map.
  @if map-has-key($grid-breakpoints, $grid-breakpoint) {
    // Get the grid-breakpoint value.
    $grid-breakpoint-value: map-get($grid-breakpoints, $grid-breakpoint);
    // Write the media query.
    @media (min-width: $grid-breakpoint-value) {
      @content;
    }
    // If the grid-breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid grid-breakpoint: #{$grid-breakpoint}.';
  }
}
